# shell pref
set-option -g default-command "reattach-to-user-namespace -l zsh"
set-option -g default-shell /bin/zsh
set-option -g utf8 on
set -g focus-events on

# vim mode
set-option -g status-keys vi
set-option -g mode-keys vi

#### KEYS
unbind C-w
set -g prefix C-w
bind C-w send-prefix

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key h if-shell "$is_vim" "send-keys C-w h"  "select-pane -L"
bind-key j if-shell "$is_vim" "send-keys C-w j"  "select-pane -D"
bind-key k if-shell "$is_vim" "send-keys C-w k"  "select-pane -U"
bind-key l if-shell "$is_vim" "send-keys C-w l"  "select-pane -R"
bind-key n if-shell "$is_vim" "send-keys C-w n"  "split-window"
bind-key v if-shell "$is_vim" "send-keys C-w v"  "split-window -h"

bind-key H send-keys C-w H
bind-key J send-keys C-w J
bind-key K send-keys C-w K
bind-key L send-keys C-w L

bind-key + resize-pane -U 20
bind-key - resize-pane -D 20

bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

bind -n C-k send-keys C-l

unbind %
unbind '"'

bind Escape copy-mode
bind p paste-buffer

# sinchronize pnales
bind-key a set-window-option synchronize-panes

# disable window renaming
set-option -g allow-rename off

#### COPY/PASTE
# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"


# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

#### END COPY/PASTE

#### LOOK & FEEL
set -g default-terminal "screen-256color"

# default statusbar colors
set-option -g status-bg black #base02
set-option -g status-fg yellow #yellow
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg 97 #base0
set-window-option -g window-status-bg default
set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg brightred #orange
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-fg colour235 #base02
set-option -g pane-active-border-fg colour97 #base01

# message text
set-option -g message-bg black #base02
set-option -g message-fg colour97 #orange

# pane number display
set-option -g display-panes-active-colour colour97 #blue
set-option -g display-panes-colour colour245 #orange

# clock
set-window-option -g clock-mode-colour colour97 #green

# ring the bell if any background window rang a bell
set -g bell-action any

# color scheme (styled as vim-powerline)
set -g status on
set -g status-utf8 on
set -g status-attr default
set -g status-interval 2
set -g status-left-length 20
set -g status-justify 'left'
set -g status-left '#[fg=colour16,bg=colour254,bold] #S #[fg=colour254,bg=colour16,nobold]#(powerline tmux left)'
set -g status-right '#(powerline tmux right |sed -e "s/Mac\(.*\).local/mackbook-pro/g")'
set -g status-right-length 150
set -g window-status-format "#[fg=colour244,bg=colour16]#I #[fg=colour240] #[fg=colour249]#W "
set -g window-status-current-format "#[fg=colour234,bg=colour16]#[fg=colour234,bg=colour56] #I  #[fg=colour231,bold]#W #[fg=colour56,bg=colour232,nobold]"

# mouse interaction
# set -g mode-mouse on
# set -g mouse-select-pane on
# set -g mouse-select-window on

# bigger history
set -g history-limit 10000

# no command delay
set -sg escape-time 0

# count windows and panes from 1
set -g base-index 1
setw -g pane-base-index 1

# enable quick command
bind C-q command-prompt -I "htop" -p "Quick window command: " "new-window '%%'"

bind C-s choose-session
