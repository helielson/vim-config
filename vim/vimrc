set tabstop=2
set shiftwidth=2
set softtabstop=2
set nowrap

set autoread                                                 " reload files when changed on disk, i.e. via `git checkout`
set backspace=2                                              " fix broken backspace in some setups
set noswapfile                                               " disable the swap files
set clipboard=unnamed                                        " yank and paste with the system clipboard
set encoding=utf-8
set expandtab                                                " expand tabs to spaces

" search sets
set ignorecase                                               " case-insensitive search
set incsearch                                                " search as you type
set smartcase                                                " case-sensitive search if any caps

set laststatus=2                                             " always show statusline
set list                                                     " show trailing whitespace
set listchars=tab:▸\ ,trail:▫
set number                                                   " show line numbers
set ruler                                                    " show where you are
set wildignore=log/**,node_modules/**,target/**,tmp/**,*.rbc,*.pyc,*.bak,*.swp,*.class
set wildmode=longest,list,full
set hlsearch                                                 " enables search highlight
set showmatch                                                " shows the cursor blinding when a closure is closed
set diffopt=vertical

" enable basic mouse behavior such as resizing buffers.
" set mouse=a

" don't highlight current line
set nocursorline

" keyboard shortcuts
inoremap jj <ESC>
let mapleader = '\'
nmap <leader>b :CtrlPBuffer<cr>
nmap <leader>t :ctrlp<cr>
nmap <leader>C :ClearAllCtrlPCaches<cr>
nmap <leader><space> :call whitespace#strip_trailing()<cr>
map <silent> <leader>v :source ~/.vimrc<cr>:filetype detect<cr>:exe ":echo 'vimrc reloaded'"<cr>
map <silent> <leader>2 :set sw=2<cr>:set sts=2<cr>:set ts=2<cr>
map <silent> <S-D-CR> :ZoomWin<CR>
nnoremap <leader>g :YcmCompleter GoToDefinitionElseDeclaration<CR>

let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'
let g:ctrlp_use_caching = 0   " ag is fast enough that CtrlP doesn't need to cache

let g:syntastic_check_on_open = 0
let g:syntastic_enable_signs = 1
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 0
let g:syntastic_check_on_wq = 1
let g:syntastic_javascript_checkers = ['eslint']
let b:syntastic_checkers = ['eslint']

" undo the highlight for the current highlighted text
nnoremap <silent> <leader>a :noh<CR>

" save current session
" nnoremap <silent> <leader> mksession! session.vim<CR>
:command SS mksession! session.vim

" toggle spelling check
nnoremap <silent> <leader>s :set spell!<CR>

" next diff in the diff tool
nnoremap <leader>w ]c

" previous diff in the diff tool
nnoremap <leader>e [c

" puts the diff to the anoter window
nnoremap <leader>q :diffput<CR>

" get the diff from another window
nnoremap <leader>r :diffget<CR>

" plugin settings
let g:ctrlp_match_window = 'order:ttb,max:20'
let g:flake8_ignore="E501"
let g:user_emmet_leader_key='<c-s>'                          " redefine the emmet trigger key

autocmd BufWritePost *.py call Flake8()                      " calls flake8 plugin even the file is saved

colorscheme oneblue

" use workspace dir as default
lcd .

" removes the scrollbars
set guioptions-=r
set guioptions-=L

noremap! jj <ESC>

" remove empty spaces in the end of line before save file
autocmd! bufwritepre * call whitespace#strip_trailing()

" increase height of focused screen part
set winheight=5
set winminheight=5
set winheight=9999

" automatically rebalance windows on vim resize
autocmd VimResized * :wincmd =

" bundles
if has('vim_starting')
  set nocompatible

  " Required:
  set runtimepath+=~/.vim/bundle/neobundle.vim/
endif

" Required:
call neobundle#begin(expand('~/.vim/bundle/'))

" Required:
NeoBundleFetch 'Shougo/neobundle.vim'

" My Bundles

NeoBundle 'kien/ctrlp.vim'
NeoBundle 'mattn/emmet-vim'
NeoBundle 'tpope/vim-fugitive'
NeoBundle 'tpope/vim-commentary'
NeoBundle 'groenewege/vim-less'
NeoBundle 'bling/vim-airline'
NeoBundle 'derekwyatt/vim-scala'
NeoBundle 'rking/ag.vim'
NeoBundle 'Valloric/YouCompleteMe'
NeoBundle 'ervandew/supertab'
NeoBundle 'nvie/vim-flake8'
NeoBundle 'editorconfig/editorconfig-vim'
NeoBundle 'drn/zoomwin-vim'
NeoBundle 'lepture/vim-jinja'
NeoBundle 'scrooloose/syntastic'
NeoBundle 'groenewege/vim-less'
" ultisnips
NeoBundle 'SirVer/ultisnips'
NeoBundle 'honza/vim-snippets'

call neobundle#end()

" If there are uninstalled bundles found on startup,
" this will conveniently prompt you to install them.
NeoBundleCheck

filetype plugin indent on
syntax on
